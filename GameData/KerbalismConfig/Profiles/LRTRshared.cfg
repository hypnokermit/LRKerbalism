//
//LRTR config was taken from two sources:  The stock KerbalismConfig and the RealismOverhaul config created by Standecco
//https://github.com/Kerbalism/Kerbalism
//https://github.com/Standecco/ROKerbalism
//
// ============================================================================
// The LRTR Shared profile use for LRTRSimple and LRTRStock
// ============================================================================
//Loads parameters for the size of the world
//does it this way so it's backwards compatible 
//with earlier versions of LRTR
KERBALISMWORLDPARAMETERS
{
	hoursPerDay = 6
	daysPerYear = 426
	karmanAltitude = 70000
	kctPresetShortName = LRTR_STOCK
}

@KERBALISMWORLDPARAMETERS:NEEDS[RealSolarSystem|RSS-Configs]:FIRST
{
	@hoursPerDay = 24
	@daysPerYear = 365
	@karmanAltitude = 100000
	@kctPresetShortName = LRTR_RSS
}

@KERBALISMWORLDPARAMETERS:NEEDS[KSRSS]:FIRST
{
	@hoursPerDay = 7.5
	@daysPerYear = 566
	@karmanAltitude = 76000
	@kctPresetShortName = LRTR_25X
}
@KERBALISMWORLDPARAMETERS:NEEDS[SolSystem]:FIRST
{
	SolSystemScale = #$@Sol_Configuration/SystemScale$
}
@KERBALISMWORLDPARAMETERS:HAS[#SolSystemScale[Quarter]]:NEEDS[SolSystem]:FIRST
{
	@hoursPerDay = 12
	@daysPerYear = 365
	@karmanAltitude = 80000
	@kctPresetShortName = LRTR_25X
}
@KERBALISMWORLDPARAMETERS:HAS[#SolSystemScale[Real]]:NEEDS[SolSystem]:FIRST
{
	@hoursPerDay = 24
	@daysPerYear = 365
	@karmanAltitude = 100000
	@kctPresetShortName = LRTR_RSS
}

// ============================================================================
// Add Part Upgrade for upgradeable slots
// ============================================================================

PARTUPGRADE:NEEDS[ProfileLRTRSimple|ProfileLRTRStock]
{
  name = Upgrade-Slots
  partIcon = kerbalism-chemicalplant
  techRequired = basicLifeSupport
  entryCost = 20000
  title = Life support and Chemical plant slot upgrade
  manufacturer = Lambda Aerospace
  description = Adds an additional configurable slot to Manned pods, ECLSS module and Chemical plants.
}

// boost Mk3 Shuttle cockpit and Science Lab Nitrogen storage
@PART[mk3Cockpit_Shuttle,Large_Crewed_Lab]:NEEDS[ProfileLRTRSimple|ProfileLRTRStock]:AFTER[KerbalismDefault]
{
	@MODULE[Configure]:HAS[#title[Pod]]
	{
		@SETUP[Pressure?Control]
		{
		    @RESOURCE[Nitrogen]
			{
				@amount *= 3
				@maxAmount *= 3
			}
		}
	}
}

// ============================================================================
// Add scrubber process to EVA kerbals
// ============================================================================

@PART[kerbalEVA*]:HAS[@MODULE[ModuleTripLogger]]:NEEDS[ProfileLRTRSimple|ProfileLRTRStock]:AFTER[KerbalismDefault]
{
	MODULE
	{
		name = ProcessController
		resource = _NonRegenScrubber
		title = Scrubber
		capacity = 1.0
		toggle = true
		running = true
	}
}

// ============================================================================
// RTG
// ============================================================================

@PART[rtg]:NEEDS[ProfileLRTRSimple|ProfileLRTRStock]:AFTER[KerbalismDefault]
{
	MODULE
	{
		name = ProcessController
		resource = _RTG
		title = RTG
		capacity = 0.75
		running = true
		toggle = false
	}

	!MODULE[ModuleGenerator] {}
	!MODULE[ModuleCoreHeat] {}
}

// ============================================================================
// Fuel cells
// ============================================================================

@PART[FuelCell]:NEEDS[ProfileLRTRSimple|ProfileLRTRStock]:AFTER[KerbalismDefault]
{
	!MODULE[ModuleResourceConverter] {}
	!RESOURCE[ElectricCharge] {}

	MODULE
	{
		name = ProcessController
		resource = _FuelCell
		title = H2+O2 fuel cell
		capacity = 1
		valve_i = 1
	}

	MODULE
	{
		name = ProcessController
		resource = _MonopropFuelCell
		title = Monoprop+O2 fuel cell
		capacity = 5
	}

	MODULE
	{
		name = Configure
		title = Fuel Cell
		slots = 1

		SETUP
		{
			name = Hydrogen Oxygen Fuel Cell
			desc = Burns <b>Hydrogen</b> gas and <b>Oxygen</b> gas, producing <b>Water</b> as a by-product.

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _FuelCell
			}
		}

		SETUP
		{
			name = Monoprop Oxygen Fuel Cell
			desc = Burns <b>MonoPropellant</b> and <b>Oxygen</b> gas, producing <b>Water</b> and <b>Nitrogen</b> gas as by-products.
			tech = electronicsHuman

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _MonopropFuelCell
			}
		}
	}

	MODULE:NEEDS[FeatureReliability]
	{
		name = Reliability
		type = ProcessController
		title = Fuel Cell
		redundancy = Power Generation
		repair = Engineer
		mtbf = 8 //8 years
		@mtbf *= 3600 //seconds per hour
		@mtbf *= #$@KERBALISMWORLDPARAMETERS/hoursPerDay$
		@mtbf *= #$@KERBALISMWORLDPARAMETERS/daysPerYear$
		extra_cost = 1.0
		extra_mass = 0.5
	}

	@TechRequired = electronicsHuman
}

@PART[FuelCellArray]:NEEDS[ProfileLRTRSimple|ProfileLRTRStock]:AFTER[KerbalismDefault]
{
	!MODULE[ModuleResourceConverter] {}
	!RESOURCE[ElectricCharge] {}

	MODULE
	{
		name = ProcessController
		resource = _FuelCell
		title = H2+O2 fuel cell
		capacity = 6
	}

	MODULE
	{
		name = ProcessController
		resource = _MonopropFuelCell
		title = Monoprop+O2 fuel cell
		capacity = 30
	}

	MODULE
	{
		name = Configure
		title = Fuel Cell
		slots = 1

		SETUP
		{
			name = Hydrogen Oxygen Fuel Cell
			desc = Burns <b>Hydrogen</b> gas and <b>Oxygen</b> gas, producing <b>Water</b> as a by-product.

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _FuelCell
			}
		}

		SETUP
		{
			name = Monoprop Oxygen Fuel Cell
			desc = Burns <b>MonoPropellant</b> and <b>Oxygen</b> gas, producing <b>Water</b> and <b>Nitrogen</b> gas as by-products.
			tech = electronicsHuman

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _MonopropFuelCell
			}
		}
	}

	MODULE:NEEDS[FeatureReliability]
	{
		name = Reliability
		type = ProcessController
		title = Fuel Cell
		redundancy = Power Generation
		repair = Engineer
		@mtbf *= 3600 //seconds per hour
		@mtbf *= #$@KERBALISMWORLDPARAMETERS/hoursPerDay$
		@mtbf *= #$@KERBALISMWORLDPARAMETERS/daysPerYear$
		extra_cost = 1.0
		extra_mass = 0.5
	}
}

@PART[MiniISRU]:NEEDS[ProfileLRTRSimple|ProfileLRTRStock]:AFTER[KerbalismDefault]
{
	@MODULE[ProcessController],*
	{
		@capacity *= 36.0			//	2.0 * 18	(MiniISRU is 18 times bigger than the kerbalism-chemicalplant)
	}
}

@PART[ISRU]:NEEDS[ProfileLRTRSimple|ProfileLRTRStock]:AFTER[KerbalismDefault]
{
	@MODULE[ProcessController],*
	{
		@capacity *= 90.0		 //	36.0 * 5 / 2	(ISRU is 5 times bigger than the MiniISRU but has double the slots)
	}

	@MODULE[Configure]:HAS[#title[Chemical?Plant]]
	{
		%slots = 2
	}
}

@PART[kerbalism-chemicalplant]:NEEDS[ProfileLRTRSimple|ProfileLRTRStock]:AFTER[KerbalismDefault]
{
	@MODULE[ProcessController],*
	{
		@capacity *= 2.0
	}
}

// tweak number of slots
@PART[MK1CrewCabin|Mark1Cockpit|cupola]:NEEDS[ProfileLRTRSimple|ProfileLRTRStock]:AFTER[KerbalismDefault] 		
{ 
    @MODULE[Configure]:HAS[#title[Pod]] 
    { 
        @slots = 1 
    } 
}
@PART[mk3Cockpit_Shuttle]:NEEDS[ProfileLRTRSimple|ProfileLRTRStock]:AFTER[KerbalismDefault] 						
{ 
    @MODULE[Configure]:HAS[#title[Pod]] 
    { 
        @slots = 3 
    } 
}

// You get a slot upgrade, and you get a slot upgrade, EVERYONE gets a slot upgrade!
// Had to fix unintended shenenigans, assuming whoever patched this initially never expected multiple configures on the same part.
@PART[*]:HAS[@MODULE[Configure]]:NEEDS[ProfileLRTRSimple|ProfileLRTRStock]:AFTER[KerbalismDefault]
{ 	
    @MODULE[Configure]:HAS[#title[Pod]] 			
    { 
        @UPGRADES 
        { 
            @UPGRADE:HAS[#name__[Upgrade?Slots]] 
            { 
                @slots = #$../../slots$
		        @slots += 1 
    	    } 
        } 
	}
	@MODULE[Configure]:HAS[#title[Life?Support]] 	
	{
	    @UPGRADES 
	    { 
	        @UPGRADE:HAS[#name__[Upgrade?Slots]] 
	        { 
	            @slots = #$../../slots$
			    @slots += 1 
			} 
		} 
	}		
	@MODULE[Configure]:HAS[#title[Chemical?Plant]] 	
	{ 
	    @UPGRADES 
	    { 
	        @UPGRADE:HAS[#name__[Upgrade?Slots]] 
	        { 
	            @slots = #$../../slots$
			    @slots += 1 
			} 
		} 
	}
}

//fix large drills
@PART[RadialDrill,kerbalism-radialpump]:NEEDS[ProfileLRTRSimple|ProfileLRTRStock]:AFTER[KerbalismDefault]
{
  @MODULE[Harvester],*
  {
    @rate *= 5
    @ec_rate *= 5
    @length = 5.0
  }
}

// ============================================================================
// Habitats
// ============================================================================
@PART[kerbalism-gravityring]:NEEDS[ProfileLRTRSimple|ProfileLRTRStock]:AFTER[KerbalismDefault]
{
	%CrewCapacity = 6
}

// sickbay
RESOURCE_DEFINITION
{
	name = _SickbayRDU
	density = 0.0
	isVisible = false
}

RESOURCE_DEFINITION
{
	name = _SickbayTV
	density = 0.0
	isVisible = false
}

RESOURCE_DEFINITION
{
	name = _SickbayShower
	density = 0.0
	isVisible = false
}

RESOURCE_DEFINITION
{
	name = _SickbayLaundry
	density = 0.0
	isVisible = false
}

@RESOURCE_DEFINITION[Nitrogen]    // Remove Nitrogen from fuel flow priorities (Don't know what RoverDude was thinking??)
{
  @flowMode = ALL_VESSEL
}


// Remove pressure controlmodules from all habitats that have a max_pressure set
@PART[*]:HAS[@MODULE[Habitat]:HAS[#max_pressure]]:NEEDS[ProfileLRTRSimple|ProfileLRTRStock]:AFTER[KerbalismDefault]
{
	!MODULE[ProcessController]:HAS[#resource[_PressureControl]] {}
	@MODULE[Configure]
	{
		!SETUP[Pressure?Control] {}
	}
}

// ============================================================================
// Pseudo-resources used by processes
// ============================================================================

RESOURCE_DEFINITION
{
  name = _NonRegenScrubber
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _Scrubber
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _PressureControl
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _AirPump
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _WaterRecycler
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _WasteProcessor
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _RTG
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _FuelCell
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _MonopropFuelCell
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _WaterElectrolysis
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _Sabatier
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _Haber
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _WasteIncinerator
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _WasteCompressor
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _Anthraquinone
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _HydrazineProduction
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _NitroHydrazine
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _SOE
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _MRE
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
  name = _SCO
  density = 0.0
  isVisible = false
}

RESOURCE_DEFINITION
{
	name = _Recycler
	density = 0.0
	isVisible = false
}

RESOURCE_DEFINITION
{
	name = _Oxygen
	density = 0.0
	isVisible = false
}

RESOURCE_DEFINITION
{
	name = _LFO
	density = 0.0
	isVisible = false
}

RESOURCE_DEFINITION
{
	name = _Monopropellant
	density = 0.0
	isVisible = false
}

RESOURCE_DEFINITION
{
	name = _Shielding
	density = 0.0
	isVisible = false
}

RESOURCE_DEFINITION
{
	name = _Fertilizer
	density = 0.0
	isVisible = false
}

RESOURCE_DEFINITION
{
	name = _Nitrogen
	density = 0.0
	isVisible = false
}

