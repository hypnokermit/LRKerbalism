// ============================================================================
// Supersonic low 1
// ============================================================================
@PART[*]:HAS[#capsuleType[Cockpit]]:NEEDS[FeatureScience,LRTRScience]:FOR[LRTR-Kerbalism]
{
	MODULE
	{
		name = Experiment
		experiment_id = RP0-SupersonicLow1

		ec_rate = #$@KERBALISM_CREW_EXPERIMENTS/RP0-SupersonicLow1/ECCost$
		%sample_amount = 0.334
		data_rate = #$@KERBALISM_CREW_EXPERIMENTS/RP0-SupersonicLow1/size$
		@data_rate /= #$@KERBALISM_CREW_EXPERIMENTS/RP0-SupersonicLow1/duration$
		requires = #$@KERBALISM_CREW_EXPERIMENTS/RP0-SupersonicLow1/requirements$
		resources = #$@KERBALISM_CREW_EXPERIMENTS/RP0-SupersonicLow1/ResourceRates$
        
		crew_operate = True
		hide_when_unavailable = True
    }
}

@EXPERIMENT_DEFINITION:HAS[#id[RP0-SupersonicLow1]]:NEEDS[FeatureScience,LRTRScience]:FOR[LRTR-Kerbalism]
{
	@baseValue = #$@KERBALISM_CREW_EXPERIMENTS/RP0-SupersonicLow1/value$
	@dataScale = #$@KERBALISM_CREW_EXPERIMENTS/RP0-SupersonicLow1/size$
	@dataScale /= #$baseValue$
	KERBALISM_EXPERIMENT
  	{
   		// sample mass in tons. if undefined or 0, the experiment produce a file
    	SampleMass = #$@KERBALISM_CREW_EXPERIMENTS/RP0-SupersonicLow1/SampleMass$
	    // Body restrictions, multiple lines allowed (just don't use confictiong combinations).
	    BodyAllowed = HomeBody
		IncludeExperiment = #$@KERBALISM_CREW_EXPERIMENTS/RP0-SupersonicLow1/IncludeExperiment$
 	}
}

// ============================================================================
// Supersonic low 2
// ============================================================================
@PART[*]:HAS[#capsuleType[Cockpit]]:NEEDS[FeatureScience,LRTRScience]:FOR[LRTR-Kerbalism]
{
	MODULE
	{
		name = Experiment
		experiment_id = RP0-SupersonicLow2

		ec_rate = #$@KERBALISM_CREW_EXPERIMENTS/RP0-SupersonicLow2/ECCost$
		%sample_amount = 0.334
		data_rate = #$@KERBALISM_CREW_EXPERIMENTS/RP0-SupersonicLow2/size$
		@data_rate /= #$@KERBALISM_CREW_EXPERIMENTS/RP0-SupersonicLow2/duration$
		requires = #$@KERBALISM_CREW_EXPERIMENTS/RP0-SupersonicLow2/requirements$
		resources = #$@KERBALISM_CREW_EXPERIMENTS/RP0-SupersonicLow2/ResourceRates$
        
		crew_operate = True
		hide_when_unavailable = True
    }
}

@EXPERIMENT_DEFINITION:HAS[#id[RP0-SupersonicLow2]]:NEEDS[FeatureScience,LRTRScience]:FOR[LRTR-Kerbalism]
{
	@baseValue = #$@KERBALISM_CREW_EXPERIMENTS/RP0-SupersonicLow2/value$
	@dataScale = #$@KERBALISM_CREW_EXPERIMENTS/RP0-SupersonicLow2/size$
	@dataScale /= #$baseValue$
	KERBALISM_EXPERIMENT
  	{
   		// sample mass in tons. if undefined or 0, the experiment produce a file
    	SampleMass = #$@KERBALISM_CREW_EXPERIMENTS/RP0-SupersonicLow2/SampleMass$
	    // Body restrictions, multiple lines allowed (just don't use confictiong combinations).
	    BodyAllowed = HomeBody
		IncludeExperiment = #$@KERBALISM_CREW_EXPERIMENTS/RP0-SupersonicLow2/IncludeExperiment$
 	}
}

// ============================================================================
// Supersonic high 1
// ============================================================================
@PART[*]:HAS[#capsuleType[Cockpit]]:NEEDS[FeatureScience,LRTRScience]:FOR[LRTR-Kerbalism]
{
	MODULE
	{
		name = Experiment
		experiment_id = RP0-SupersonicHigh1

		ec_rate = #$@KERBALISM_CREW_EXPERIMENTS/RP0-SupersonicHigh1/ECCost$
		%sample_amount = 0.334
		data_rate = #$@KERBALISM_CREW_EXPERIMENTS/RP0-SupersonicHigh1/size$
		@data_rate /= #$@KERBALISM_CREW_EXPERIMENTS/RP0-SupersonicHigh1/duration$
		requires = #$@KERBALISM_CREW_EXPERIMENTS/RP0-SupersonicHigh1/requirements$
		resources = #$@KERBALISM_CREW_EXPERIMENTS/RP0-SupersonicHigh1/ResourceRates$
        
		crew_operate = True
		hide_when_unavailable = True
    }
}

@EXPERIMENT_DEFINITION:HAS[#id[RP0-SupersonicHigh1]]:NEEDS[FeatureScience,LRTRScience]:FOR[LRTR-Kerbalism]
{
	@baseValue = #$@KERBALISM_CREW_EXPERIMENTS/RP0-SupersonicHigh1/value$
	@dataScale = #$@KERBALISM_CREW_EXPERIMENTS/RP0-SupersonicHigh1/size$
	@dataScale /= #$baseValue$
	KERBALISM_EXPERIMENT
  	{
   		// sample mass in tons. if undefined or 0, the experiment produce a file
    	SampleMass = #$@KERBALISM_CREW_EXPERIMENTS/RP0-SupersonicHigh1/SampleMass$
	    // Body restrictions, multiple lines allowed (just don't use confictiong combinations).
	    BodyAllowed = HomeBody
		IncludeExperiment = #$@KERBALISM_CREW_EXPERIMENTS/RP0-SupersonicHigh1/IncludeExperiment$
 	}
}

// ============================================================================
// Supersonic high 2
// ============================================================================
@PART[*]:HAS[#capsuleType[Cockpit]]:NEEDS[FeatureScience,LRTRScience]:FOR[LRTR-Kerbalism]
{
	MODULE
	{
		name = Experiment
		experiment_id = RP0-SupersonicHigh2

		ec_rate = #$@KERBALISM_CREW_EXPERIMENTS/RP0-SupersonicHigh2/ECCost$
		%sample_amount = 0.334
		data_rate = #$@KERBALISM_CREW_EXPERIMENTS/RP0-SupersonicHigh2/size$
		@data_rate /= #$@KERBALISM_CREW_EXPERIMENTS/RP0-SupersonicHigh2/duration$
		requires = #$@KERBALISM_CREW_EXPERIMENTS/RP0-SupersonicHigh2/requirements$
		resources = #$@KERBALISM_CREW_EXPERIMENTS/RP0-SupersonicHigh2/ResourceRates$
        
		crew_operate = True
		hide_when_unavailable = True
    }
}

@EXPERIMENT_DEFINITION:HAS[#id[RP0-SupersonicHigh2]]:NEEDS[FeatureScience,LRTRScience]:FOR[LRTR-Kerbalism]
{
	@baseValue = #$@KERBALISM_CREW_EXPERIMENTS/RP0-SupersonicHigh2/value$
	@dataScale = #$@KERBALISM_CREW_EXPERIMENTS/RP0-SupersonicHigh2/size$
	@dataScale /= #$baseValue$
	KERBALISM_EXPERIMENT
  	{
   		// sample mass in tons. if undefined or 0, the experiment produce a file
    	SampleMass = #$@KERBALISM_CREW_EXPERIMENTS/RP0-SupersonicHigh2/SampleMass$
	    // Body restrictions, multiple lines allowed (just don't use confictiong combinations).
	    BodyAllowed = HomeBody
		IncludeExperiment = #$@KERBALISM_CREW_EXPERIMENTS/RP0-SupersonicHigh2/IncludeExperiment$
 	}
}

// Cockpits
@PART[*]:HAS[#capsuleType[Cockpit]]:NEEDS[FeatureScience,LRTRScience,LRTRScience]:AFTER[LRTR-Kerbalism]
{
	@MODULE[HardDrive]
	{
		@sampleCapacity += 1
	}

	MODULE
	{
		name = Configure
		title = Crew Science
		slots = 1
		
		SETUP
		{
			name = None
			desc = Empty slot for mass and cost savings, should you not require any experiments installed.
		}

		SETUP
		{
			name = Trans-sonic Flight
			desc = Early experiments with trans-sonic flight, assessing aerodynamics near the speed of sound.
			mass = 0.004
			
			MODULE
			{
			  type = Experiment
			  id_field = experiment_id
			  id_value = RP0-SupersonicLow1
			}
		}
		SETUP
		{
			name = Mach 2 Flight
			desc = Experiments at and around twice the speed of sound.
			mass = 0.004
			tech = supersonicDev
			
			MODULE
			{
			  type = Experiment
			  id_field = experiment_id
			  id_value = RP0-SupersonicLow2
			}
		}
		SETUP
		{
			name = High altitude flight
			desc = //fixme
			mass = 0.004
			tech = matureSupersonic
			
			MODULE
			{
			  type = Experiment
			  id_field = experiment_id
			  id_value = RP0-SupersonicHigh1
			}
		}
		SETUP
		{
			name = Hypersonic flight
			desc = //fixme
			mass = 0.004
			tech = matureSupersonic
			
			MODULE
			{
			  type = Experiment
			  id_field = experiment_id
			  id_value = RP0-SupersonicHigh2
			}
		}
	}
}