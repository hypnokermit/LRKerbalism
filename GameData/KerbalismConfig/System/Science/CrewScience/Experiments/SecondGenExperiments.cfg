//
//LRTR config was taken from two sources:  The stock KerbalismConfig and the RealismOverhaul config created by Standecco
//https://github.com/Kerbalism/Kerbalism
//https://github.com/Standecco/ROKerbalism
//

// ============================================================================
// Orbital Maneuvering
// ============================================================================
@PART[*]:HAS[#capsuleType[SecondGenCapsule]]:NEEDS[FeatureScience]:FOR[LRTR-Kerbalism]
{
	MODULE
	{
		name = Experiment
		experiment_id = RP0-OrbitalManeuvering

		ec_rate = #$@KERBALISM_CREW_EXPERIMENTS/RP0-OrbitalManeuvering/ECCost$
		data_rate = #$@KERBALISM_CREW_EXPERIMENTS/RP0-OrbitalManeuvering/size$
		@data_rate /= #$@KERBALISM_CREW_EXPERIMENTS/RP0-OrbitalManeuvering/duration$
		requires = #$@KERBALISM_CREW_EXPERIMENTS/RP0-OrbitalManeuvering/requirements$
		resources = #$@KERBALISM_CREW_EXPERIMENTS/RP0-OrbitalManeuvering/ResourceRates$
        
		crew_operate = Pilot
		hide_when_unavailable = True
    }
}

@EXPERIMENT_DEFINITION:HAS[#id[RP0-OrbitalManeuvering]]:NEEDS[FeatureScience]:FOR[LRTR-Kerbalism]
{
	@baseValue = #$@KERBALISM_CREW_EXPERIMENTS/RP0-OrbitalManeuvering/value$
	@dataScale = #$@KERBALISM_CREW_EXPERIMENTS/RP0-OrbitalManeuvering/size$
	@dataScale /= #$baseValue$
	KERBALISM_EXPERIMENT
  	{
   		// sample mass in tons. if undefined or 0, the experiment produce a file
    	SampleMass = #$@KERBALISM_CREW_EXPERIMENTS/RP0-OrbitalManeuvering/SampleMass$
	    // Body restrictions, multiple lines allowed (just don't use confictiong combinations).
	    BodyAllowed = HomeBody
  	}
}
// ============================================================================
// Visual Acuity
// ============================================================================
@PART[*]:HAS[#capsuleType[SecondGenCapsule]]:NEEDS[FeatureScience]:FOR[LRTR-Kerbalism]
{
	MODULE
	{
		name = Experiment
		experiment_id = RP0-VisualAcuity

		ec_rate = #$@KERBALISM_CREW_EXPERIMENTS/RP0-VisualAcuity/ECCost$
		data_rate = #$@KERBALISM_CREW_EXPERIMENTS/RP0-VisualAcuity/size$
		@data_rate /= #$@KERBALISM_CREW_EXPERIMENTS/RP0-VisualAcuity/duration$
		requires = #$@KERBALISM_CREW_EXPERIMENTS/RP0-VisualAcuity/requirements$
		resources = #$@KERBALISM_CREW_EXPERIMENTS/RP0-VisualAcuity/ResourceRates$
        
		crew_operate = True
		hide_when_unavailable = True
    }
}

@EXPERIMENT_DEFINITION:HAS[#id[RP0-VisualAcuity]]:NEEDS[FeatureScience]:FOR[LRTR-Kerbalism]
{
	@baseValue = #$@KERBALISM_CREW_EXPERIMENTS/RP0-VisualAcuity/value$
	@dataScale = #$@KERBALISM_CREW_EXPERIMENTS/RP0-VisualAcuity/size$
	@dataScale /= #$baseValue$
	KERBALISM_EXPERIMENT
  	{
   		// sample mass in tons. if undefined or 0, the experiment produce a file
    	SampleMass = #$@KERBALISM_CREW_EXPERIMENTS/RP0-VisualAcuity/SampleMass$
	    // Body restrictions, multiple lines allowed (just don't use confictiong combinations).
	    BodyAllowed = HomeBody
  	}
}
// ============================================================================
// Star Occultation Navigation
// ============================================================================
@PART[*]:HAS[#capsuleType[SecondGenCapsule]]:NEEDS[FeatureScience]:FOR[LRTR-Kerbalism]
{
	MODULE
	{
		name = Experiment
		experiment_id = RP0-StarOccultationNav

		ec_rate = #$@KERBALISM_CREW_EXPERIMENTS/RP0-StarOccultationNav/ECCost$
		data_rate = #$@KERBALISM_CREW_EXPERIMENTS/RP0-StarOccultationNav/size$
		@data_rate /= #$@KERBALISM_CREW_EXPERIMENTS/RP0-StarOccultationNav/duration$
		requires = #$@KERBALISM_CREW_EXPERIMENTS/RP0-StarOccultationNav/requirements$
		resources = #$@KERBALISM_CREW_EXPERIMENTS/RP0-StarOccultationNav/ResourceRates$
        
		crew_operate = True
		hide_when_unavailable = True
    }
}

@EXPERIMENT_DEFINITION:HAS[#id[RP0-StarOccultationNav]]:NEEDS[FeatureScience]:FOR[LRTR-Kerbalism]
{
	@baseValue = #$@KERBALISM_CREW_EXPERIMENTS/RP0-StarOccultationNav/value$
	@dataScale = #$@KERBALISM_CREW_EXPERIMENTS/RP0-StarOccultationNav/size$
	@dataScale /= #$baseValue$
	KERBALISM_EXPERIMENT
  	{
   		// sample mass in tons. if undefined or 0, the experiment produce a file
    	SampleMass = #$@KERBALISM_CREW_EXPERIMENTS/RP0-StarOccultationNav/SampleMass$
	    // Body restrictions, multiple lines allowed (just don't use confictiong combinations).
	    BodyAllowed = HomeBody
  	}
}
// ============================================================================
// Power Tool Evaluation
// ============================================================================
@PART[*]:HAS[#capsuleType[SecondGenCapsule]]:NEEDS[FeatureScience]:FOR[LRTR-Kerbalism]
{
	MODULE
	{
		name = Experiment
		experiment_id = RP0-PowerToolEvaluation

		ec_rate = #$@KERBALISM_CREW_EXPERIMENTS/RP0-PowerToolEvaluation/ECCost$
		data_rate = #$@KERBALISM_CREW_EXPERIMENTS/RP0-PowerToolEvaluation/size$
		@data_rate /= #$@KERBALISM_CREW_EXPERIMENTS/RP0-PowerToolEvaluation/duration$
		requires = #$@KERBALISM_CREW_EXPERIMENTS/RP0-PowerToolEvaluation/requirements$
		resources = #$@KERBALISM_CREW_EXPERIMENTS/RP0-PowerToolEvaluation/ResourceRates$
        
		crew_operate = Engineer
		hide_when_unavailable = True
    }
}

@EXPERIMENT_DEFINITION:HAS[#id[RP0-PowerToolEvaluation]]:NEEDS[FeatureScience]:FOR[LRTR-Kerbalism]
{
	@baseValue = #$@KERBALISM_CREW_EXPERIMENTS/RP0-PowerToolEvaluation/value$
	@dataScale = #$@KERBALISM_CREW_EXPERIMENTS/RP0-PowerToolEvaluation/size$
	@dataScale /= #$baseValue$
	KERBALISM_EXPERIMENT
  	{
   		// sample mass in tons. if undefined or 0, the experiment produce a file
    	SampleMass = #$@KERBALISM_CREW_EXPERIMENTS/RP0-PowerToolEvaluation/SampleMass$
	    // Body restrictions, multiple lines allowed (just don't use confictiong combinations).
	    BodyAllowed = HomeBody
  	}
}
// ============================================================================
// Simple Organism Egg Growth
// ============================================================================
@PART[*]:HAS[#capsuleType[SecondGenCapsule]]:NEEDS[FeatureScience]:FOR[LRTR-Kerbalism]
{
	MODULE
	{
		name = Experiment
		experiment_id = RP0-EggGrowth

		ec_rate = #$@KERBALISM_CREW_EXPERIMENTS/RP0-EggGrowth/ECCost$
		data_rate = #$@KERBALISM_CREW_EXPERIMENTS/RP0-EggGrowth/size$
		@data_rate /= #$@KERBALISM_CREW_EXPERIMENTS/RP0-EggGrowth/duration$
		%sample_amount = 1
		requires = #$@KERBALISM_CREW_EXPERIMENTS/RP0-EggGrowth/requirements$
		resources = #$@KERBALISM_CREW_EXPERIMENTS/RP0-EggGrowth/ResourceRates$
        
		crew_operate = True
		hide_when_unavailable = True
    }
}

@EXPERIMENT_DEFINITION:HAS[#id[RP0-EggGrowth]]:NEEDS[FeatureScience]:FOR[LRTR-Kerbalism]
{
	@baseValue = #$@KERBALISM_CREW_EXPERIMENTS/RP0-EggGrowth/value$
	@dataScale = #$@KERBALISM_CREW_EXPERIMENTS/RP0-EggGrowth/size$
	@dataScale /= #$baseValue$
	KERBALISM_EXPERIMENT
  	{
   		// sample mass in tons. if undefined or 0, the experiment produce a file
    	SampleMass = #$@KERBALISM_CREW_EXPERIMENTS/RP0-EggGrowth/SampleMass$
	    // Body restrictions, multiple lines allowed (just don't use confictiong combinations).
	    BodyAllowed = HomeBody
  	}
}
// ============================================================================
// Synergistic Effect of Zero Gravity and Radiation on White Blood Cells
// ============================================================================
@PART[*]:HAS[#capsuleType[SecondGenCapsule]]:NEEDS[FeatureScience]:FOR[LRTR-Kerbalism]
{
	MODULE
	{
		name = Experiment
		experiment_id = RP0-BloodCells

		ec_rate = #$@KERBALISM_CREW_EXPERIMENTS/RP0-BloodCells/ECCost$
		data_rate = #$@KERBALISM_CREW_EXPERIMENTS/RP0-BloodCells/size$
		@data_rate /= #$@KERBALISM_CREW_EXPERIMENTS/RP0-BloodCells/duration$
		%sample_amount = 1
		requires = #$@KERBALISM_CREW_EXPERIMENTS/RP0-BloodCells/requirements$
		resources = #$@KERBALISM_CREW_EXPERIMENTS/RP0-BloodCells/ResourceRates$
        
		crew_operate = True
		hide_when_unavailable = True
    }
}

@EXPERIMENT_DEFINITION:HAS[#id[RP0-BloodCells]]:NEEDS[FeatureScience]:FOR[LRTR-Kerbalism]
{
	@baseValue = #$@KERBALISM_CREW_EXPERIMENTS/RP0-BloodCells/value$
	@dataScale = #$@KERBALISM_CREW_EXPERIMENTS/RP0-BloodCells/size$
	@dataScale /= #$baseValue$
	KERBALISM_EXPERIMENT
  	{
   		// sample mass in tons. if undefined or 0, the experiment produce a file
    	SampleMass = #$@KERBALISM_CREW_EXPERIMENTS/RP0-BloodCells/SampleMass$
	    // Body restrictions, multiple lines allowed (just don't use confictiong combinations).
	    BodyAllowed = HomeBody
  	}
}
// ============================================================================
// In-Flight Sleep Analysis
// ============================================================================
@PART[*]:HAS[#capsuleType[SecondGenCapsule]]:NEEDS[FeatureScience]:FOR[LRTR-Kerbalism]
{
	MODULE
	{
		name = Experiment
		experiment_id = RP0-SleepAnalysis

		ec_rate = #$@KERBALISM_CREW_EXPERIMENTS/RP0-SleepAnalysis/ECCost$
		data_rate = #$@KERBALISM_CREW_EXPERIMENTS/RP0-SleepAnalysis/size$
		@data_rate /= #$@KERBALISM_CREW_EXPERIMENTS/RP0-SleepAnalysis/duration$
		requires = #$@KERBALISM_CREW_EXPERIMENTS/RP0-SleepAnalysis/requirements$
		resources = #$@KERBALISM_CREW_EXPERIMENTS/RP0-SleepAnalysis/ResourceRates$
        
		crew_operate = True
		hide_when_unavailable = True
    }
}

@EXPERIMENT_DEFINITION:HAS[#id[RP0-SleepAnalysis]]:NEEDS[FeatureScience]:FOR[LRTR-Kerbalism]
{
	@baseValue = #$@KERBALISM_CREW_EXPERIMENTS/RP0-SleepAnalysis/value$
	@dataScale = #$@KERBALISM_CREW_EXPERIMENTS/RP0-SleepAnalysis/size$
	@dataScale /= #$baseValue$
	KERBALISM_EXPERIMENT
  	{
   		// sample mass in tons. if undefined or 0, the experiment produce a file
    	SampleMass = #$@KERBALISM_CREW_EXPERIMENTS/RP0-SleepAnalysis/SampleMass$
	    // Body restrictions, multiple lines allowed (just don't use confictiong combinations).
	    BodyAllowed = HomeBody
  	}
}
// ============================================================================
// Food Evaluation
// ============================================================================
@PART[*]:HAS[#capsuleType[SecondGenCapsule]]:NEEDS[FeatureScience]:FOR[LRTR-Kerbalism]
{
	MODULE
	{
		name = Experiment
		experiment_id = RP0-FoodEvaluation

		ec_rate = #$@KERBALISM_CREW_EXPERIMENTS/RP0-FoodEvaluation/ECCost$
		data_rate = #$@KERBALISM_CREW_EXPERIMENTS/RP0-FoodEvaluation/size$
		@data_rate /= #$@KERBALISM_CREW_EXPERIMENTS/RP0-FoodEvaluation/duration$
		requires = #$@KERBALISM_CREW_EXPERIMENTS/RP0-FoodEvaluation/requirements$
		resources = #$@KERBALISM_CREW_EXPERIMENTS/RP0-FoodEvaluation/ResourceRates$
        
		crew_operate = True
		hide_when_unavailable = True
    }
}

@EXPERIMENT_DEFINITION:HAS[#id[RP0-FoodEvaluation]]:NEEDS[FeatureScience]:FOR[LRTR-Kerbalism]
{
	@baseValue = #$@KERBALISM_CREW_EXPERIMENTS/RP0-FoodEvaluation/value$
	@dataScale = #$@KERBALISM_CREW_EXPERIMENTS/RP0-FoodEvaluation/size$
	@dataScale /= #$baseValue$
	KERBALISM_EXPERIMENT
  	{
   		// sample mass in tons. if undefined or 0, the experiment produce a file
    	SampleMass = #$@KERBALISM_CREW_EXPERIMENTS/RP0-FoodEvaluation/SampleMass$
	    // Body restrictions, multiple lines allowed (just don't use confictiong combinations).
	    BodyAllowed = HomeBody
  	}
}
// ============================================================================
// In-flight Work Tolerance
// ============================================================================
@PART[*]:HAS[#capsuleType[SecondGenCapsule]]:NEEDS[FeatureScience]:FOR[LRTR-Kerbalism]
{
	MODULE
	{
		name = Experiment
		experiment_id = RP0-WorkTolerance

		ec_rate = #$@KERBALISM_CREW_EXPERIMENTS/RP0-WorkTolerance/ECCost$
		data_rate = #$@KERBALISM_CREW_EXPERIMENTS/RP0-WorkTolerance/size$
		@data_rate /= #$@KERBALISM_CREW_EXPERIMENTS/RP0-WorkTolerance/duration$
		requires = #$@KERBALISM_CREW_EXPERIMENTS/RP0-WorkTolerance/requirements$
		resources = #$@KERBALISM_CREW_EXPERIMENTS/RP0-WorkTolerance/ResourceRates$
        
		crew_operate = True
		hide_when_unavailable = True
    }
}

@EXPERIMENT_DEFINITION:HAS[#id[RP0-WorkTolerance]]:NEEDS[FeatureScience]:FOR[LRTR-Kerbalism]
{
	@baseValue = #$@KERBALISM_CREW_EXPERIMENTS/RP0-WorkTolerance/value$
	@dataScale = #$@KERBALISM_CREW_EXPERIMENTS/RP0-WorkTolerance/size$
	@dataScale /= #$baseValue$
	KERBALISM_EXPERIMENT
  	{
   		// sample mass in tons. if undefined or 0, the experiment produce a file
    	SampleMass = #$@KERBALISM_CREW_EXPERIMENTS/RP0-WorkTolerance/SampleMass$
	    // Body restrictions, multiple lines allowed (just don't use confictiong combinations).
	    BodyAllowed = HomeBody
  	}
}
// ============================================================================
// Simple Navigation
// ============================================================================
@PART[*]:HAS[#capsuleType[SecondGenCapsule]]:NEEDS[FeatureScience]:FOR[LRTR-Kerbalism]
{
	MODULE
	{
		name = Experiment
		experiment_id = RP0-SimpleNavigation

		ec_rate = #$@KERBALISM_CREW_EXPERIMENTS/RP0-SimpleNavigation/ECCost$
		data_rate = #$@KERBALISM_CREW_EXPERIMENTS/RP0-SimpleNavigation/size$
		@data_rate /= #$@KERBALISM_CREW_EXPERIMENTS/RP0-SimpleNavigation/duration$
		requires = #$@KERBALISM_CREW_EXPERIMENTS/RP0-SimpleNavigation/requirements$
		resources = #$@KERBALISM_CREW_EXPERIMENTS/RP0-SimpleNavigation/ResourceRates$
        
		crew_operate = Pilot
		hide_when_unavailable = True
    }
}

@EXPERIMENT_DEFINITION:HAS[#id[RP0-SimpleNavigation]]:NEEDS[FeatureScience]:FOR[LRTR-Kerbalism]
{
	@baseValue = #$@KERBALISM_CREW_EXPERIMENTS/RP0-SimpleNavigation/value$
	@dataScale = #$@KERBALISM_CREW_EXPERIMENTS/RP0-SimpleNavigation/size$
	@dataScale /= #$baseValue$
	KERBALISM_EXPERIMENT
  	{
   		// sample mass in tons. if undefined or 0, the experiment produce a file
    	SampleMass = #$@KERBALISM_CREW_EXPERIMENTS/RP0-SimpleNavigation/SampleMass$
	    // Body restrictions, multiple lines allowed (just don't use confictiong combinations).
	    BodyAllowed = HomeBody
  	}
}
// ============================================================================
// Zodiacal Light Photography
// ============================================================================
@PART[*]:HAS[#capsuleType[SecondGenCapsule]]:NEEDS[FeatureScience]:FOR[LRTR-Kerbalism]
{
	MODULE
	{
		name = Experiment
		experiment_id = RP0-ZodiacalLightPhoto

		ec_rate = #$@KERBALISM_CREW_EXPERIMENTS/RP0-ZodiacalLightPhoto/ECCost$
		data_rate = #$@KERBALISM_CREW_EXPERIMENTS/RP0-ZodiacalLightPhoto/size$
		@data_rate /= #$@KERBALISM_CREW_EXPERIMENTS/RP0-ZodiacalLightPhoto/duration$
		%sample_amount = 1
		requires = #$@KERBALISM_CREW_EXPERIMENTS/RP0-ZodiacalLightPhoto/requirements$
		resources = #$@KERBALISM_CREW_EXPERIMENTS/RP0-ZodiacalLightPhoto/ResourceRates$
        
		crew_operate = True
		hide_when_unavailable = True
    }
}

@EXPERIMENT_DEFINITION:HAS[#id[RP0-ZodiacalLightPhoto]]:NEEDS[FeatureScience]:FOR[LRTR-Kerbalism]
{
	@baseValue = #$@KERBALISM_CREW_EXPERIMENTS/RP0-ZodiacalLightPhoto/value$
	@dataScale = #$@KERBALISM_CREW_EXPERIMENTS/RP0-ZodiacalLightPhoto/size$
	@dataScale /= #$baseValue$
	KERBALISM_EXPERIMENT
  	{
   		// sample mass in tons. if undefined or 0, the experiment produce a file
    	SampleMass = #$@KERBALISM_CREW_EXPERIMENTS/RP0-ZodiacalLightPhoto/SampleMass$
	    // Body restrictions, multiple lines allowed (just don't use confictiong combinations).
	    BodyAllowed = HomeBody
  	}
}
// ============================================================================
// UHF/VHF Polarization
// ============================================================================
@PART[*]:HAS[#capsuleType[SecondGenCapsule]]:NEEDS[FeatureScience]:FOR[LRTR-Kerbalism]
{
	MODULE
	{
		name = Experiment
		experiment_id = RP0-VHFPolarization

		ec_rate = #$@KERBALISM_CREW_EXPERIMENTS/RP0-VHFPolarization/ECCost$
		data_rate = #$@KERBALISM_CREW_EXPERIMENTS/RP0-VHFPolarization/size$
		@data_rate /= #$@KERBALISM_CREW_EXPERIMENTS/RP0-VHFPolarization/duration$
		requires = #$@KERBALISM_CREW_EXPERIMENTS/RP0-VHFPolarization/requirements$
		resources = #$@KERBALISM_CREW_EXPERIMENTS/RP0-VHFPolarization/ResourceRates$
        
		crew_operate = True
		hide_when_unavailable = True
    }
}

@EXPERIMENT_DEFINITION:HAS[#id[RP0-VHFPolarization]]:NEEDS[FeatureScience]:FOR[LRTR-Kerbalism]
{
	@baseValue = #$@KERBALISM_CREW_EXPERIMENTS/RP0-VHFPolarization/value$
	@dataScale = #$@KERBALISM_CREW_EXPERIMENTS/RP0-VHFPolarization/size$
	@dataScale /= #$baseValue$
	KERBALISM_EXPERIMENT
  	{
   		// sample mass in tons. if undefined or 0, the experiment produce a file
    	SampleMass = #$@KERBALISM_CREW_EXPERIMENTS/RP0-VHFPolarization/SampleMass$
	    // Body restrictions, multiple lines allowed (just don't use confictiong combinations).
	    BodyAllowed = HomeBody
  	}
}

// Second Gen Capsules
@PART[*]:HAS[#capsuleType[SecondGenCapsule]]:NEEDS[FeatureScience]:AFTER[LRTR-Kerbalism]
{

	@MODULE[HardDrive]
	{
		@sampleCapacity += 2
	}

	MODULE
	{
		name = Configure
		title = Crew Science
		slots = 3

		SETUP
		{
			name = None
			desc = Empty slot for mass and cost savings, should you not require any experiments installed.
		}

		SETUP
		{
			name = Orbital Maneuvering
			desc = It will be necessary for our future spacecraft to be able to change their oribts in order to rendezvous and dock. This experiment will test the Orbital Maneuvering system to better understand what is required and possible.
			mass = 0
			tech = secondGenCapsules
			
			MODULE
			{
			  type = Experiment
			  id_field = experiment_id
			  id_value = RP0-OrbitalManeuvering
			}
		}
		SETUP
		{
			name = Visual Acuity
			desc = The visual ability of the astronauts in the detection and recognition of objects on the Earth's surface will be tested.
			mass = 0.002
			tech = start
			
			MODULE
			{
			  type = Experiment
			  id_field = experiment_id
			  id_value = RP0-VisualAcuity
			}
		}
		SETUP
		{
			name = Star Occultation Navigation
			desc = To study the feasibility and operational value of star occulting measurements in the development of a simple, accurate, and self-contained navigational capability by measuring the time stars dip behind an established horizon.
			mass = 0.008
			tech = earlyFlightControl
			
			MODULE
			{
			  type = Experiment
			  id_field = experiment_id
			  id_value = RP0-StarOccultationNav
			}
		}
		SETUP
		{
			name = Power Tool Evaluation
			desc = To determine man's ability to perform work tasks in pressurized suit under zero gravity.
			mass = 0
			tech = materialsScienceHuman
			
			MODULE
			{
			  type = Experiment
			  id_field = experiment_id
			  id_value = RP0-PowerToolEvaluation
			}
		}
		SETUP
		{
			name = Simple Organism Egg Growth
			desc = This experiment is designed to explore the possibility of the existence of a gravitational field effect on cells exposed to microgravity situations. These irregularities would be easier to explore in simple cell systems.
			mass = 0.001
			tech = materialsScienceHuman
			
			MODULE
			{
			  type = Experiment
			  id_field = experiment_id
			  id_value = RP0-EggGrowth
			}
		}
		SETUP
		{
			name = Synergistic Effect of Zero Gravity and Radiation on White Blood Cells
			desc = The objective is to examine the biological effects of radiation. The experiment will test the possibility that weightlessness interacts with radiation to produce unpredicted effects greater than the sum of their individual effects.
			mass = 0.001
			tech = start
			
			MODULE
			{
			  type = Experiment
			  id_field = experiment_id
			  id_value = RP0-BloodCells
			}
		}
		SETUP
		{
			name = In-Flight Sleep Analysis
			desc = The objectives of this experiment are to assess the crew's state of alertness, levels of consciousness, and depth of sleep during flight.
			mass = 0
			tech = start
			
			MODULE
			{
			  type = Experiment
			  id_field = experiment_id
			  id_value = RP0-SleepAnalysis
			}
		}
		SETUP
		{
			name = Food Evaluation
			desc = Our scientists have come up with a fancy way of packaging food for consumption in space. We need the crew to evaluate how the trip to space has affected this packaging and the quality of the food.
			mass = 0.001
			tech = start
			
			MODULE
			{
			  type = Experiment
			  id_field = experiment_id
			  id_value = RP0-FoodEvaluation
			}
		}
		SETUP
		{
			name = In-flight Work Tolerance
			desc = The astronauts will use a bungee cord to assess their capacity to do physical work under space flight conditions.
			mass = 0.003
			tech = start
			
			MODULE
			{
			  type = Experiment
			  id_field = experiment_id
			  id_value = RP0-WorkTolerance
			}
		}
		SETUP
		{
			name = Simple Navigation
			desc = Study the capability of crew to provide a reliable method of navigation without input from the ground utilizing a space stedimeter and a sextant.
			mass = 0.005
			tech = secondGenCapsules
			
			MODULE
			{
			  type = Experiment
			  id_field = experiment_id
			  id_value = RP0-SimpleNavigation
			}
		}
		SETUP
		{
			name = Zodiacal Light Photography
			desc = To obtain photographs of zodiacal light, airglow layer, and other dim light phenomena, including day sky brightness from orbital altitude.
			mass = 0.008
			tech = secondGenCapsules
			
			MODULE
			{
			  type = Experiment
			  id_field = experiment_id
			  id_value = RP0-ZodiacalLightPhoto
			}
		}
		SETUP
		{
			name = UHF/VHF Polarization
			desc = To obtain information on communication systems operating through the ionosphere.
			mass = 0.005
			tech = lunarRangeComms
			
			MODULE
			{
			  type = Experiment
			  id_field = experiment_id
			  id_value = RP0-VHFPolarization
			}
		}
	}
}
